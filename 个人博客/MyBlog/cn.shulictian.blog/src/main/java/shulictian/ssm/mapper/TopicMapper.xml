<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="shulictian.ssm.mapper.TopicMapper">

	<resultMap type="topicCustom" id="getOneTop">
		<id column="id" property="id" />
		<result column="title" property="title" />
		<result column="text" property="text" />
		<result column="readNum" property="readNum" />
		<result column="type" property="type" />
		<result column="genre" property="genre" />
		<result column="sendTime" property="sendTime" />
		<association property="user" javaType="user"
			select="shulictian.ssm.mapper.UserMapper.getUserById" column="user_id">
		</association>
	</resultMap>

	<resultMap type="topicCustom" id="getSelfTop">
		<id column="id" property="id" />
		<result column="title" property="title" />
		<result column="text" property="text" />
		<result column="readNum" property="readNum" />
		<result column="type" property="type" />
		<result column="genre" property="genre" />
		<result column="sendTime" property="sendTime" />
		<association property="userCus" javaType="userCustom"
			select="shulictian.ssm.mapper.UserMapper.findUser" column="user_id">
		</association>
	</resultMap>

	<resultMap type="topic" id="adminTop">
		<id column="id" property="id" />
		<result column="title" property="title" />
		<result column="text" property="text" />
		<result column="type" property="type" />
		<result column="genre" property="genre" />
		<result column="sendTime" property="sendTime" />
		<association property="user" javaType="user"
			select="shulictian.ssm.mapper.UserMapper.getUserById" column="user_id">
		</association>
	</resultMap>

	<!-- 储存文章 -->
	<insert id="saveTopic" parameterType="topic" useGeneratedKeys="true"
		keyProperty="id">
		insert into topic
		(title,text,user_id,genre,type,sendTime,state)
		value(#{title},#{text},#{user.id},#{genre},#{type},#{sendTime},#{state})
	</insert>

	<!-- 创建对应文章的状态记录 -->
	<insert id="saveState" parameterType="int">
		insert into topstate
		(top_id) value(#{id})
	</insert>

	<!-- 更新文章的状态 -->
	<update id="updateState" parameterType="map">
		update topstate set
		readNum=#{readNum},commentNum=#{commentNum} where
		top_id=#{topId}
	</update>

	<!-- 根据id查找文章 -->
	<select id="getUserTopicById" parameterType="int" resultMap="getSelfTop">
		select t.*,ts.readNum from topic t,topstate ts where t.id=#{id} and
		t.id=ts.top_id
	</select>

	<!-- 搜索文章 -->
	<select id="soTop" parameterType="string" resultMap="getOneTop">
		select
		t.*,ts.readNum from topic t,topstate ts where ts.top_id=t.id and
		t.state=1 and t.title like #{sele}
	</select>

	<!-- 根据类型获取所有文章 -->
	<select id="getType" parameterType="int" resultMap="getOneTop">
		select
		t.*,ts.readNum from topic t,topstate ts where type=#{type} and
		t.state=1 and ts.top_id=t.id order by t.sendTime desc
	</select>

	<!-- 获取所有用户的文章 -->
	<select id="getTopicsByAudit" parameterType="map" resultMap="getOneTop">
		select t.*,ts.readNum from topic t,topstate ts where t.state=1 and
		ts.top_id=t.id order by t.sendTime desc limit #{start},#{end}
	</select>

	<!-- 获取所有用户的文章 -->
	<select id="getAllCount" resultType="int">
		select count(*) from topic
		t,topstate ts where t.state=1 and
		ts.top_id=t.id
	</select>

	<!-- 根据state与id获取此用户的文章 -->
	<select id="getTopByState" parameterType="map" resultMap="getOneTop">
		select
		t.* from topic t,topstate ts where t.user_id=#{userId} and
		t.state=#{state} and ts.top_id=t.id order by t.sendTime desc
	</select>

	<!-- 更新文章状态 -->
	<update id="upTopStateByState" parameterType="map">
		update topic set
		state=#{state} where id=#{topId}
	</update>

	<!-- 博主最新5条 -->
	<select id="findNewTop" parameterType="int" resultType="topic">
		select
		t.id,t.title from topic t,topstate ts where t.id=ts.top_id and
		t.user_id=#{userId} and t.state=1 order by t.sendTime desc limit 0,5
	</select>

	<!-- 博主最热5条 -->
	<select id="findHotTop" parameterType="int" resultType="topic">
		select
		t.id,t.title from topic t,topstate ts where t.id=ts.top_id and
		t.user_id=#{userId} and t.state=1 order by ts.readNum desc limit 0,5
	</select>

	<!-- 当前类型5条 -->
	<select id="findNewTypeTop" parameterType="int" resultType="topic">
		select t.id,t.title from topic t,topstate ts where t.id=ts.top_id and
		t.type=#{type} and t.state=1 order by t.sendTime desc limit 0,5
	</select>

	<!-- 相关5条 -->
	<select id="findRelatedTop" parameterType="int" resultType="topic">
		select t.id,t.title from topic t,topstate ts where t.id=ts.top_id and
		t.type=#{type} and t.state=1 order by t.sendTime desc limit 0,5
	</select>

	<!-- 所有最热5条 -->
	<select id="findAllTopHot" resultType="topic">
		select t.id,t.title from
		topic t,topstate ts where t.id=ts.top_id and
		t.state=1 order by
		ts.readNum desc limit 0,5
	</select>

	<!-- 所有最新5条 -->
	<select id="findAllTopNew" resultType="topic">
		select t.id,t.title from
		topic t,topstate ts where t.id=ts.top_id and
		t.state=1 order by
		t.sendTime desc limit 0,5
	</select>

	<!-- 根据genre查询自己的文章 -->
	<select id="findTopByGenre" parameterType="map" resultMap="getOneTop">
		select t.*,ts.readNum from
		topic t,topstate ts
		where
		t.state=1 and
		ts.top_id=t.id and
		t.user_id=#{userId} and
		t.genre=#{genre}
		order by
		t.sendTime desc
	</select>

	<!-- 个人主页查询文章 -->
	<select id="homeFind" parameterType="map" resultMap="getOneTop">
		select
		t.*,ts.readNum from topic t,topstate ts where t.user_id=#{userId} and
		t.state=1 and ts.top_id=t.id and t.title like #{ctx} order by
		t.sendTime desc
	</select>

</mapper>